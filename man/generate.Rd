% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rdata_helpers.R
\name{generate}
\alias{gen_bool}
\alias{gen_char}
\alias{gen_dist}
\alias{gen_num}
\alias{gen_random}
\alias{gen_seq}
\alias{generate}
\title{rdata Argument Generators}
\usage{
gen_char(ncol = 1, values = LETTERS, name = "X", replace = TRUE,
  probs = NULL, add.na = FALSE, as.factor = FALSE)

gen_num(ncol = 1, values = seq(-10, 10, length.out = 150), name = "X",
  replace = TRUE, add.na = FALSE, as.factor = FALSE)

gen_bool(ncol = 1, name = "X", probs = NULL, add.na = FALSE,
  as.factor = FALSE)

gen_random(ncol = 1, name = "random", add.na = FALSE, as.factor = FALSE)

gen_seq(start, end, ..., ncol = 1, name = "X", replace = TRUE,
  add.na = FALSE, as.factor = FALSE)

gen_dist(dist, ..., ncol = 1, name, replace = FALSE, add.na = FALSE,
  as.factor = FALSE)
}
\arguments{
\item{ncol}{how many columns of these specific attributes to generate; defaults to 1}

\item{values}{vector of values to sample from}

\item{name}{name(s) of the column(s) for the rdata; length should be 1 or equal to ncol}

\item{replace}{logical; if TRUE values will be sampled with replacement}

\item{probs}{vector of probability weights for obtaining the elemnts of the vector to be sampled}

\item{add.na}{logical; if TRUE NA list of possible values altered to contain NA}

\item{as.factor}{logical; if TRUE the column will be converted to factor column}

\item{start,end}{starting and end values of sequence to sample from}

\item{...}{additional arguments depending on generate function. See details}

\item{dist}{random distribution generator function, such as rnorm, runif, etc}
}
\value{
an rdata_generator list object that can be passed into \code{rdata} to generate a columns of the random data frame
}
\description{
Generate the list with the appropriate column specifications to pass to \code{\link{rdata}}.
Column attributes and sampling specifications are fully customizable. \cr \cr
Currently there are 3 available column types: numeric(gen_num), character(gen_char), and boolean(gen_bool).
gen_random chooses one of these three default generators at random. \cr \cr
Additional customizable generators allow for generating a sequence (gen_seq) and choosing random values from a specified distribution (gen_dist). \cr \cr
Predefined \code{\link{shortcut_generators}} for commonly used values are also available.
}
\details{
For gen_seq, additional arguments can be passed to the seq function. \cr

For gen_dist, additional arguments for parameters of distribution. Not required if the random generator already has defaults.
}
\examples{
# generates templates for rdata with given specifications
ex1 <- gen_num(name = "x", values = 1:20, replace = FALSE, add.na = TRUE)
ex2 <- gen_char(3, letters, c("a", "b", "c"))
ex3 <- gen_bool(name = "true_or_false", probs = c(.75, .25))
gpa <- gen_seq(0,4,.5, name = "gpa")
rand_normal <- gen_dist(rnorm)
rand_pois <- gen_dist(rpois, lambda = 4)
rand_unif <- gen_dist(runif, 0, 5)

# shortcut generators
state <- gen_state(kind = "abb")
state2 <- gen_state(kind = "full")
gender <- gen_gender(name = "gender")
random <- gen_random(4)
}

